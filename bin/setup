#!/usr/bin/env ruby
require 'pathname'
require 'fileutils'
require 'io/console'
require 'io/wait'
include FileUtils

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file.

  puts '== Checking dependencies =='
  response = system ('redis-cli ping')

  puts '== Installing dependencies =='
  system 'gem install bundler --conservative'
  system('bundle check') or system('bundle install')
  
  # In order to run OS specific command for Installing Redis
  require 'os'

  # Check if response is true or not, if connection is refused then will try to Install
  if !response
    puts '== Could not connect to Redis =='
    puts '== Either Redis server is not running or its not installed =='
    puts '== Try running "redis-server" in terminal to start Redis server =='
    puts '== Or you want to continue Installing Redis:(y : n)'
    accept = STDIN.getch

    if accept == "y"
      if OS.linux?
        system('wget http://download.redis.io/redis-stable.tar.gz') 
        system('tar xvzf redis-stable.tar.gz')
        system('cd redis-stable; make')
        # puts "== Need your permission to copy redis-server & redis-cli to bin directory =="
        # system('cd redis-stable; sudo cp src/redis-server /usr/local/bin/')
        # system('cd redis-stable; sudo cp src/redis-cli /usr/local/bin/')
        system('cd redis-stable; make install')

        # Removing redis folder generated
        system('rm -rf redis-stable')
        puts '== Installed Successfully =='
      elsif OS.mac?
        system ('brew install redis')
      else
        puts "Could not Install for your OS."
      end
    end
  else 
    puts "Redis is Installed" 
  end
  

  # puts "\n== Copying sample files =="
  # unless File.exist?('config/database.yml')
  #   cp 'config/database.yml.sample', 'config/database.yml'
  # end

  puts "\n== Preparing database =="
  system 'ruby bin/rake db:setup'

  puts "\n== Removing old logs and tempfiles =="
  system 'ruby bin/rake log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system 'ruby bin/rake restart'
end
